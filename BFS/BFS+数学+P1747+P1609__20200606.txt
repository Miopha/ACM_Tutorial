/*
题目背景
《爱与愁的故事第三弹·shopping》娱乐章。

调调口味来道水题。

题目描述
爱与愁大神坐在公交车上无聊，于是玩起了手机。一款奇怪的游戏进入了爱与愁大神的眼帘：***（游戏名被打上了马赛克）。这个游戏类似象棋，但是只有黑白马各一匹，在点x1,y1和x2,y2上。它们得从点x1,y1和x2,y2走到1,1。这个游戏与普通象棋不同的地方是：马可以走“日”，也可以像象走“田”。现在爱与愁大神想知道两匹马到1,1的最少步数，你能帮他解决这个问题么？

输入格式
第1行：两个整数x1，y1

第2行：两个整数x2，y2

输出格式
第1行：黑马到1,1的步数

第2行：白马到1,1的步数

说明/提示
100%数据：x1,y1,x2,y2<=20
*/

//package P1747;

import java.util.*;

public class Main {

	static int maxn = 55;
	static int[][] dir = {{1,-2},{1,2},{2,-2},{2,-1},{2,1},{2,2},{-1,-2},{-1,2},{-2,-1},{-2,1},{-2,-2},{-2,2}};
	static boolean vis[][];
	static LinkedList<Warp> q=new LinkedList<Warp>();
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println(bfs(new Warp(sc.nextInt(),sc.nextInt(),0)));
		System.out.println(bfs(new Warp(sc.nextInt(),sc.nextInt(),0)));
		sc.close();
		/*
		for(int i = 0 ; i < maxn ; i++) {
			for(int j = 0 ; j < maxn ; j++)
				System.out.print((vis[i][j]==true?1:0)+" ");
			System.out.println();
		}*/
		
	}
	
	public static int bfs(Warp s) {
		vis = new boolean[maxn][maxn];
		q.clear();
		q.add(s);
		vis[s.x][s.y] = true;
		while(!q.isEmpty()) {
			Warp w = q.pollFirst();
			for(int i = 0 ; i < 12 ; i++) {
				Warp dw = new Warp(w.x+dir[i][0],w.y+dir[i][1],w.step+1);
				//System.out.println("x="+w.x+" "+dw.x+" y="+w.y+" "+dw.y);
				if(dw.x<=0||dw.y<=0||dw.y>50||dw.x>50||vis[dw.x][dw.y])continue;
				vis[dw.x][dw.y]=true;
				q.add(dw);
				if(dw.x==1&&dw.y==1)return dw.step;
			}
		}
		return -1;
	}

}

class Warp {
	int x , y , step;
	public Warp(int a , int b , int s) {
		x = a ; y = b; step = s;
	}
}