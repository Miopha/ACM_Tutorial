/*
https://www.luogu.com.cn/problem/P2384
题目背景
狗哥做烂了最短路，突然机智的考了 Bosh 一道，没想到把 Bosh 考住了...你能帮 Bosh 解决吗？

题目描述
给定 nn 个点的带权有向图，求从 11 到 nn 的路径中边权之积最小的简单路径。

输入格式
第一行读入两个整数 nn，mm，表示共 nn 个点 mm 条边。 接下来 mm 行，每行三个正整数 xx，yy，zz，表示点 xx 到点 yy 有一条边权为z的边。

输出格式
输出仅包括一行，记为所求路径的边权之积，由于答案可能很大，因此狗哥仁慈地让你输出它模 99879987 的余数即可。

废话当然是一个数了w

//谢fyszzhouzj指正w
*/

/*
 * dijkstra过程中不能取模因为会影响到松弛
 * 可以用ln来存储最短路因为a*b=e^(ln(a)+ln(b))
 * 最短路过程中保存前趋，dijkstra后再把最短路上的值乘起来
 */
 
#include <cstdio>
#include <cmath>
#include <queue>

using namespace std;
typedef pair<int,int> node; // dis, pos

const int MAXN = 1005, MAXM = 100005, MOD = 9987, INF = 1e9;

int head[MAXN], tot;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

struct Edge{
    int u, to, val, next;
}G[MAXM];

inline void addEdge(int u, int v, int w){
    G[++tot].u = u;
    G[tot].to = v;
    G[tot].val = w;
    G[tot].next = head[u];
    head[u] = tot;
}

int n, m, pre[MAXN], preEdge[MAXM], ans;
double dis[MAXN];
bool vis[MAXN];

void dij(int s){
	priority_queue<node,vector<node>,greater<node> > q;
	for(int i = 1 ; i <= n ; ++i) dis[i] = INF;
	q.push(node{dis[s]=0,s});
	while(!q.empty()){
		int np = q.top().second; q.pop();
		if(vis[np]) continue;
		vis[np] = true;
		for(int i = head[np], to ; i ; i = G[i].next){
			to = G[i].to;
			if(!vis[to]&&dis[to]>dis[np]+log(G[i].val)){
				pre[to] = np;
				preEdge[to] = i;
				dis[to] = dis[np] + log(G[i].val);
				q.push(node{dis[to],to});
			}
		}
	}
}

int main(){
	n = read();
	m = read();
	for(int i = 1, u, v, w ; i <= m ; ++i){
		u = read();
		v = read();
		w = read();
		addEdge(u,v,w);
	}
	dij(1);
	int tmp = n;
	ans = 1;
	while(tmp^1){
		ans = ans * G[preEdge[tmp]].val % MOD;
		tmp = pre[tmp];
	}
	printf("%d\n",ans);
	return 0;
}