/*
https://www.acwing.com/problem/content/3178/
小明正在分析一本小说中的人物相关性。

他想知道在小说中 Alice 和 Bob 有多少次同时出现。

更准确的说，小明定义 Alice 和 Bob “同时出现”的意思是：在小说文本中 Alice 和 Bob 之间不超过 K 个字符。

例如以下文本：

This is a story about Alice and Bob. Alice wants to send a private message to Bob.

假设 K=20，则 Alice 和 Bob 同时出现了 2 次，分别是 Alice and Bob 和 Bob. Alice。

前者 Alice 和 Bob 之间有 5 个字符，后者有 2 个字符。

注意:

Alice 和 Bob 是大小写敏感的，alice 或 bob 等并不计算在内。
Alice 和 Bob 应为单独的单词，前后可以有标点符号和空格，但是不能有字母。例如 Bobbi 並不算出现了 Bob。
输入格式
第一行包含一个整数 K。

第二行包含一行字符串，只包含大小写字母、标点符号和空格。长度不超过 1000000。

输出格式
输出一个整数，表示 Alice 和 Bob 同时出现的次数。

数据范围
1≤K≤1000000
*/

#include <cstdio>
#include <iostream>
#include <vector>
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define pb push_back

using namespace std;
typedef long long ll;
const int MAXN = 1000005;

char s[MAXN], a[] = {' ','A','l','i','c','e'}, b[] = {' ','B','o','b'};
int k, len;
ll ans;
vector<int> alice, bob;

int main(){
	scanf("%d",&k);
	getchar();
	char c;
	do{
		scanf("%c",&c);
		s[++len] = c;
	}while(c^'\n');
	
	for(int i = 1 ; i <= len ; ++i){
		for(int j = 1 ; j <= 5 ; ++j){
			if(a[j]^s[i]) break;
			++i;
			if(j==5&&!isalpha(s[i-6])&&!isalpha(s[i])) alice.pb(i-5);
		}
	}
	
	for(int i = 1 ; i <= len ; ++i){
		for(int j = 1 ; j <= 3 ; ++j){
			if(b[j]^s[i]) break;
			++i;
			if(j==3&&!isalpha(s[i-4])&&!isalpha(s[i])) bob.pb(i-3);
		}
	}
	
	vector<int>::iterator r_bob = bob.begin(), l_bob = bob.begin();
	for(auto it : alice){
		while(*r_bob^bob[bob.size()-1]&&*(r_bob+1)-k-5<=it) ++r_bob;
		while(*l_bob^bob[bob.size()-1]&&*l_bob<it-k-3) ++l_bob;
		ans += std::distance(l_bob,r_bob) + 1;
	}
	printf("%lld\n",ans);
	
	return 0;
}