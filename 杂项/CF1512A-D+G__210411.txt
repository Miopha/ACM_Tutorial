/*
https://codeforces.com/contest/1512/problem/A
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define pb push_back
#define cl clear
#define mp make_pair

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;
const int MAXN = 200005;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int n, arr[MAXN];

void solve(){
	n = read();
	for(int i = 1 ; i <= n ; ++i){
		arr[i] = read();
	}
	for(int i = 2 ; i < n ; ++i){
		if(arr[i]^arr[i-1]&&arr[i]^arr[i+1]){
			printf("%d\n",i);
			return ;
		}
	}
	if(arr[1]^arr[2]) puts("1");
	else printf("%d\n",n);
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}

/*
https://codeforces.com/contest/1512/problem/B
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define pb push_back
#define cl clear
#define mp make_pair
#define x1 X1
#define y1 Y1
#define x2 X2
#define y2 Y2

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;
const int MAXN = 200005;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int n, x1, y1, x2, y2;
char sq[405][405];

void solve(){
	x1 = y1 = x2 = y2 = 0;
	n = read();
	for(int i = 1 ; i <= n ; ++i){
		for(int j = 1 ; j <= n ; ++j){
			scanf("%c",&sq[i][j]);
			if(sq[i][j]=='*'&&!x1) x1 = i, y1 = j;
			if(sq[i][j]=='*'&&x1) x2 = i, y2 = j;
		}
		getchar();
	}
	if(x1==x2){
		if(x1^n){
			sq[x1+1][y1] = sq[x2+1][y2] = '*';
		}else{
			sq[x1-1][y1] = sq[x2-1][y2] = '*';
		}
	}
	if(y1==y2){
		if(y1^n){
			sq[x1][y1+1] = sq[x2][y2+1] = '*';
		}else{
			sq[x1][y1-1] = sq[x2][y2-1] = '*';
		}
	}
	sq[x1][y1] = sq[x1][y2] = sq[x2][y1] = sq[x2][y2] = '*';
	for(int i = 1 ; i <= n ; ++i){
		for(int j = 1 ; j <= n ; ++j){
			putchar(sq[i][j]);
		}
		putchar('\n');
	}
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}

/*
https://codeforces.com/contest/1512/problem/C
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define pb push_back
#define cl clear
#define mp make_pair

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;
const int MAXN = 200005;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int n, a, b, zeros, ones;
char s[MAXN];

void solve(){
	zeros = ones = 0;
	a = read();
	b = read();
	n = a + b;
	for(int i = 1 ; i <= n ; ++i) s[i] = getchar();
	getchar();
	for(int i = 1 ; i <= (n>>1) ; ++i){
		if(s[i]=='0') ++zeros;
		else if(s[i]=='1') ++ones;
		if(s[n-i+1]=='0') ++zeros;
		else if(s[n-i+1]=='1') ++ones;
		if(s[i]^s[n-i+1]){
			if(s[i]^'?'&&s[n-i+1]^'?'){
				puts("-1");
				return ;
			}
			if(s[i]^'?'){
				if(s[i]=='1'){
					s[n-i+1] = '1';
					++ones;
				}else if(s[i]=='0'){
					s[n-i+1] = '0';
					++zeros;
 				}
			}else{
				if(s[n-i+1]=='1'){
					s[i] = '1';
					++ones;
				}else if(s[n-i+1]=='0'){
					s[i] = '0';
					++zeros;
 				}
			}
		}
	}
	
	if((n&1)&&s[(n>>1)+1]^'?'){
		if(s[(n>>1)+1]=='1') ++ones;
		else ++zeros;
	}else if((n&1)&&s[(n>>1)+1]=='?'){
		if((a-zeros)&1) ++zeros, s[(n>>1)+1] = '0';
		else if((b-ones)&1) ++ones, s[(n>>1)+1] = '1';
	}
	
	if(zeros>a||ones>b||(a-zeros)&1||(b-ones)&1){
		puts("-1");
		return ;
	}
	
	for(int i = 1 ; i <= (n>>1) ; ++i){
		if(s[i]=='?'){
			if(a-zeros){
				s[i] = s[n-i+1] = '0';
				zeros += 2;
			}else if(b-ones){
				s[i] = s[n-i+1] = '1';
				ones += 2;
			}
		}
	}
	for(int i = 1 ; i <= n ; ++i) putchar(s[i]);
	putchar('\n');
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}

/*
https://codeforces.com/contest/1512/problem/D
D. Corrupted Array
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a number n and an array b1,b2,…,bn+2, obtained according to the following algorithm:

some array a1,a2,…,an was guessed;
array a was written to array b, i.e. bi=ai (1≤i≤n);
The (n+1)-th element of the array b is the sum of the numbers in the array a, i.e. bn+1=a1+a2+…+an;
The (n+2)-th element of the array b was written some number x (1≤x≤109), i.e. bn+2=x; The
array b was shuffled.
For example, the array b=[2,3,7,12,2] it could be obtained in the following ways:

a=[2,2,3] and x=12;
a=[3,2,7] and x=2.
For the given array b, find any array a that could have been guessed initially.

Input
The first line contains a single integer t (1≤t≤104). Then t test cases follow.

The first line of each test case contains a single integer n (1≤n≤2⋅105).

The second row of each test case contains n+2 integers b1,b2,…,bn+2 (1≤bi≤109).

It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.

Output
For each test case, output:

"-1", if the array b could not be obtained from any array a;
n integers a1,a2,…,an, otherwise.
If there are several arrays of a, you can output any.
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define pb push_back
#define cl clear
#define mp make_pair

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;
const int MAXN = 200005;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int n, arr[MAXN], n2;
ll n1, sum;

void solve(){
	sum = 0;
	n = read();
	for(int i = 1 ; i <= n + 2 ; ++i) arr[i] = read();
	sort(arr+1,arr+1+n+2);
	for(int i = 1 ; i <= n + 1 ; ++i) sum += arr[i];
	n1 = arr[n+2];
	for(int i = 1 ; i <= n + 1 ; ++i){
		if(sum-arr[i]==n1){
			for(int j = 1 ; j <= n + 1 ; ++j){
				if(j==i) continue;
				printf("%d ",arr[j]);
			}
			putchar('\n');
			return ;
		}
	}
	n2 = arr[n+1];
	sum -= arr[n+1];
	if(n2==sum){
		for(int i = 1 ; i <= n ; ++i) printf("%d%c",arr[i]," \n"[i==n]);
		return ;
	}
	puts("-1");
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}

/*
https://codeforces.com/contest/1512/problem/G
G. Short Task
time limit per test2 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
Let us denote by d(n) the sum of all divisors of the number n, i.e. d(n)=∑k|nk.

For example, d(1)=1, d(4)=1+2+4=7, d(6)=1+2+3+6=12.

For a given number c, find the minimum n such that d(n)=c.

Input
The first line contains one integer t (1≤t≤104). Then t test cases follow.

Each test case is characterized by one integer c (1≤c≤107).

Output
For each test case, output:

"-1" if there is no such n that d(n)=c;
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define pb push_back
#define cl clear
#define mp make_pair

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 0x3f3f3f3f;
const int MAXN = 200005;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int divSum[10000005], ans[10000005];

void calc(int x){
	int nw = x;
	while(nw<=1e7){
		divSum[nw] += x;
		nw += x;
	}
}

int c;

void solve(){
	c = read();
	if(ans[c]^INF) printf("%d\n",ans[c]);
	else puts("-1");
}

int main(){
	for(int i = 1 ; i <= 1e7 ; ++i){
		calc(i);
		ans[i] = INF;
	}
	for(int i = 1 ; i <= 1e7 ; ++i)
		if(divSum[i]<=1e7)
			ans[divSum[i]] = min(ans[divSum[i]],i);
    int t = 1;
    t = read(); 
    while(t--) solve();
    return 0;
}
