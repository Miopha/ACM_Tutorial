/*
https://codeforces.com/contest/1476/problem/B
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define max(a,b) ((a) > (b) ? (a) : (b))
#define min(a,b) ((a) < (b) ? (a) : (b))
#define pb push_back
#define cl clear
#define mp make_pair

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;
const int MAXN = 105;

inline ll read(){
	ll x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

double cent;
ll prefix[MAXN], p[MAXN], ans, n, k;

void solve(){
	n = k = cent = ans = 0;
	for(int i = 0 ; i <= 100 ; ++i) prefix[i] = p[i] = 0; 
	n = read();
	k = read();
	cent = k * 1.0 / 100;
	for(int i = 1 ; i <= n ; ++i){
		p[i] = read();
		prefix[i] = prefix[i-1] + p[i];
	}
	for(int i = 2 ; i <= n ; ++i){
		ll need = p[i]*100/k;
		if(p[i]*100%k) ++need;
		ans = max(ans,need-prefix[i-1]);
		// printf("need=%lld\n",(ll)ceil(p[i]*1.0/cent));
	}
	printf("%lld\n",max(ans,0));
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}

/*
https://codeforces.com/contest/1476/problem/C
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
#include <cmath>
#define pb push_back
#define cl clear
#define mp make_pair

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;
const int MAXN = 200005;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int n, a[MAXN], b[MAXN], c[MAXN];
ll ans, mx[MAXN];

void solve(){
	ans = 0;
	n = read();
	for(int i = 1 ; i <= n ; ++i){
		mx[i] = 0;
		a[i] = read();
	}
	for(int i = 1 ; i <= n ; ++i) b[i] = read();
	for(int i = 1 ; i <= n ; ++i) c[i] = read();
	ans = mx[2] = 2 + a[2] - 1 + abs(b[2]-c[2]);
	for(int i = 3 ; i <= n ; ++i){
		if(abs(b[i]-c[i])>=1){
			mx[i] = a[i]+1+max((ll)abs(b[i]-c[i]),a[i-1]-1-abs(c[i]-b[i])+mx[i-1]-a[i-1]+1);
		}else{
			mx[i] = a[i] + 1;
		}
		ans = max(ans,mx[i]);
	}
	printf("%lld\n",ans);
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}
