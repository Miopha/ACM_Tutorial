/*
题目描述
你是一只小跳蛙，你特别擅长在各种地方跳来跳去。

这一天，你和朋友小 F 一起出去玩耍的时候，遇到了一堆高矮不同的石头，其中第 i 块的石头高度为 hi  ，地面的高度是 h0 = 0 。你估计着，从第 i 块石头跳到第 j 块石头上耗费的体力值为 (hi - hj) ^ 2 ，从地面跳到第 i 块石头耗费的体力值是 hi^2

为了给小 F 展现你超级跳的本领，你决定跳到每个石头上各一次，并最终停在任意一块石头上，并且小跳蛙想耗费尽可能多的体力值。

当然，你只是一只小跳蛙，你只会跳，不知道怎么跳才能让本领更充分地展现。

不过你有救啦！小 F 给你递来了一个写着 AK 的电脑，你可以使用计算机程序帮你解决这个问题，万能的计算机会告诉你怎么跳。

那就请你——会写代码的小跳蛙——写下这个程序，为你 NOIp AK 踏出坚实的一步吧！

输入格式
输入一行一个正整数 ，表示石头个数。

输入第二行 n 个正整数，表示第 i 块石头的高度 hi

输出格式
输出一行一个正整数，表示你可以耗费的体力值的最大值。
*/

/*
 * 贪心，一开始跳上hi最大的一块，然后每次找出(hi - hj)^2最大的值
 * 可以先用sort排序，然后每次向最左或向最右跳
 * 当然跳过的石头不能再跳
 */
 
//package P4995;

import java.util.*;
import java.io.*;

public class Main {
	
	static FastScanner cin = new FastScanner(System.in);
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

	public static void main(String[] args) {
		int n = cin.nextInt() , l = 0 , r = n - 1;
		boolean left = true;
		long ans = 0;
		int[] data = new int[n];
		for(int i = 0 ; i < n ; i++)
			data[i] = cin.nextInt();
		Arrays.sort(data);
		//从最大跳起
		ans += data[r]*data[r--];
		//左右横跳
		while(l<=r) {
			if(left) ans += (int)Math.pow(data[r+1]-data[l++],2);
			else ans += (int)Math.pow(data[r--]-data[l-1],2);
			left = !left;
		}
		out.println(ans);
		out.flush();
	}
	
	static class FastScanner{
		BufferedReader br;
		StringTokenizer st;
		public FastScanner(InputStream in) {
			br = new BufferedReader(new InputStreamReader(in),16384);
			st = new StringTokenizer("");
		}
		public String nextLine() {
			try {
				return br.readLine();
			}catch(IOException e) {
				return null;
			}
		}
		public boolean hasNext() {
			while(!st.hasMoreTokens()) {
				String s = nextLine();
				if(s==null) return false;
				st = new StringTokenizer(s);
			}
			return true;
		}
		public String next() {
			hasNext();
			return st.nextToken();
		}
		public int nextInt() {
			return Integer.parseInt(next());
		}
	}

}
