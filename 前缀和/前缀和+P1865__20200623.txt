/*
题目背景
题目名称是吸引你点进来的。
实际上该题还是很水的。

题目描述
给定 l,r，求区间 [l, r] 内质数的个数。

输入格式
第一行有两个整数，分别代表询问次数 nn 和 给定区间的右端点最大值 mm。

接下来 n 行，每行两个整数 l, r代表一次查询。

输出格式
对于每次查询输出一行，若 l, r ∈ [1, m]，则输出区间质数个数，否则输出 Crossing the line。
*/

/*
 * 用质数筛得出[1,i]区间有多少质数(利用前缀和),那么输出的时候输出ans[r]-ans[l-1]即可。
 */
 
//package P1865;

import java.util.*;
import java.io.*;

public class Main {
	
	public static void main(String[] args) throws Exception{
		StreamTokenizer cin = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		cin.nextToken();
		int q = (int)cin.nval;
		cin.nextToken();
		int n = (int)cin.nval;
		int primes[] = new int[n+1] , ans[] = new int[n+1] , cnt = 0;
		boolean isNotPrime[] = new boolean[n+1];
		ans[0] = ans[1] = 0;
		
		for(int i = 2 ; i <= n ; i++) {
			if(!isNotPrime[i])
				primes[++cnt]=i;
			for(int j = 1 ; j <= n && primes[j] * i <= n ; j++) {
				isNotPrime[primes[j]*i]=true;
				if(i%primes[j]==0)break;
			}
			ans[i]=cnt;
		}
		
		StringBuilder out  = new StringBuilder();
		
		while(q-->0) {
			cin.nextToken();
			int l = (int)cin.nval;
			cin.nextToken();
			int r = (int)cin.nval;
			if(l<1||r<1||r>n||l>n) {
				out.append("Crossing the line").append("\n");
				continue;
			}
			out.append(ans[r]-ans[l-1]).append("\n");
		}
		
		System.out.println(out.toString());
	}
	
}
