/*
https://www.acwing.com/problem/content/2071/
2069. 网络分析
小明正在做一个网络实验。

他设置了 n 台电脑，称为节点，用于收发和存储数据。

初始时，所有节点都是独立的，不存在任何连接。

小明可以通过网线将两个节点连接起来，连接后两个节点就可以互相通信了。

两个节点如果存在网线连接，称为相邻。

小明有时会测试当时的网络，他会在某个节点发送一条信息，信息会发送到每个相邻的节点，之后这些节点又会转发到自己相邻的节点，直到所有直接或间接相邻的节点都收到了信息。

所有发送和接收的节点都会将信息存储下来。

一条信息只存储一次。

给出小明连接和测试的过程，请计算出每个节点存储信息的大小。

输入格式
输入的第一行包含两个整数 n,m，分别表示节点数量和操作数量。

节点从 1 至 n 编号。

接下来 m 行，每行三个整数，表示一个操作。

如果操作为 1 a b，表示将节点 a 和节点 b 通过网线连接起来。当 a = b 时，表示连接了一个自环，对网络没有实质影响。
如果操作为 2 p t，表示在节点 p 上发送一条大小为 t 的信息。
输出格式
输出一行，包含 n 个整数，相邻整数之间用一个空格分割，依次表示进行完上述操作后节点 1 至节点 n 上存储信息的大小。

数据范围
1≤n≤10000,
1≤m≤105,
1≤t≤100
输入样例1：
4 8
1 1 2
2 1 10
2 3 5
1 4 1
2 2 2
1 1 2
1 2 4
2 2 1
输出样例1：
13 13 5 3
*/

/*
 * 1操作用并查集合并两个集合，2操作直接在集合上标记操作(类似lazy tag)
 * 当两个集合合并的时候传递lazy tag,因为n最大只有10000,合并操作最多只有n次,直接遍历O(n*n)也是在可接受的范围
 * 因为随时要传递lazy tag,所以子节点和父节点的距离不能超过1（不能只是路径压缩，那样会出现距离大于1的两个节点）,这个也可以O(n*n)实现，此时也不需要路径压缩了
 */
 
#include <cstdio>

using namespace std;
const int MAXN = 100005;

int parent[MAXN], ans[MAXN], add[MAXN];

inline int find(int x){
	return parent[x];
}

int n, m;

int main(){
	scanf("%d %d",&n,&m);
	for(int i = 1 ; i <= n ; ++i) parent[i] = i;
	for(int i = 1 ; i <= m ; ++i){
		int c, a, b;
		scanf("%d %d %d",&c,&a,&b);
		if(c==1){
			int pa = find(a), pb = find(b);
			if(pa==pb) continue;
			for(int i = 1 ; i <= n ; ++i){
				if(parent[i]==pa){
					ans[i] += add[pa];
					parent[i] = pb;
				}else if(parent[i]==pb) ans[i] += add[pb];
			}
			add[pa] = add[pb] = 0;
		}else{
			add[find(a)] += b;
		}
	}
	for(int i = 1 ; i <= n ; ++i) printf("%d%c",ans[i]+add[parent[i]]," \n"[i==n]);
	return 0;
}