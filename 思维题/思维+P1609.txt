/*
题目描述
回文数是从左向右读和从右向左读结果一样的数字串。

例如：121、44 和3是回文数，175和36不是。

对于一个给定的N，请你寻找一个回文数P，满足P>N。

满足这样条件的回文数很多，你的任务是输出其中最小的一个。

输入格式
1行，一个正整数N。N的数值小于10^100，并且N没有前导0。

输出格式
你的程序应该输出一行，最小的回文数P（P>N）。

说明/提示
50%的数据，N<10^9

100%的数据，N<10^100
*/

//package P1609;

import java.util.Scanner;

public class Main {

	static char[] data = new char[105] , ans = new char[105];
	static int n;
	
	public static void main(String[] args) {
		String s = new Scanner(System.in).next(); n = s.length();
		for(int i = 0 ; i < n ; i++) data[i] = s.charAt(i);
		for(int i = 0 ; i < n && data[i]=='9'; i++) 
			if(i==n-1) {
				System.out.print(1);
				for(int j = 0 ; j < n - 1 ; j++)System.out.print(0);
				System.out.println(1);
				return ;
			}
		int l = 0 , r = n - 1;
		for(;l<=r;l++,r--)ans[l] = ans[r] = data[l];
		//printArray(ans);
		if(!cmp(ans,data)) {
			//System.out.println(1);
			int i = n / 2;
			while(ans[i]=='9') ans[i--]='0';
			ans[i] = ans[n - i - 1] = (char)(ans[i]+1);
		}
		printArray(ans);
	}
	
	public static void printArray(char[] c) {
		for(int i = 0 ; i < n ; i++)
			System.out.print(c[i]);
		System.out.println();
	}
	
	public static boolean cmp(char[] a , char[] b) {
		for(int i = 0 ; i < n ; i++)
			if(a[i]>b[i]) return true;
			else if(a[i]<b[i]) return false;
		return false;
	}

}
