/*
题目背景
XS中学化学竞赛组教练是一个酷爱炉石的人。

他会一边搓炉石一边点名以至于有一天他连续点到了某个同学两次，然后正好被路过的校长发现了然后就是一顿欧拉欧拉欧拉（详情请见已结束比赛 CON900）。

题目描述
这之后校长任命你为特派探员，每天记录他的点名。校长会提供化学竞赛学生的人数和名单，而你需要告诉校长他有没有点错名。（为什么不直接不让他玩炉石。）

输入格式
第一行一个整数 n，表示班上人数。

接下来 n 行，每行一个字符串表示其名字（互不相同，且只含小写字母，长度不超过 50）。

第 n+2 行一个整数 m，表示教练报的名字个数。

接下来 m 行，每行一个字符串表示教练报的名字（只含小写字母，且长度不超过 50）。

输出格式
对于每个教练报的名字，输出一行。

如果该名字正确且是第一次出现，输出 OK，如果该名字错误，输出 WRONG，如果该名字正确但不是第一次出现，输出 REPEAT。
*/

/*
 * trie树模板
 */


#include <iostream>
#include <cstdio>
#include <string.h>
#define MAXN 55

using namespace std;
typedef long long ll;

int tot;

struct node{
	int son[26];
	bool isEnd, isRepeat;
	node(){
		for(int i = 0 ; i < 26 ; ++i) son[i] = 0;
		isEnd = isRepeat = false;
	}
}trie[800000];

void insert(char *s){
	int u = 0, v, len = strlen(s);
	for(int i = 0 ; i < len ; ++i){
		v = s[i] - 'a';
		if(!trie[u].son[v]) trie[u].son[v] = ++tot;
		u = trie[u].son[v];
	}
	trie[u].isEnd = true;
}

int find(char *s){
	int u = 0, v, len = strlen(s);
	for(int i = 0 ; i < len ; ++i){
		v = s[i] - 'a';
		// WRONG
		if(!trie[u].son[v]) return 2;
		u = trie[u].son[v];
	}
	if(!trie[u].isEnd) return 2;
	// REPEAT
	if(trie[u].isRepeat) return 3;
	// OK
	trie[u].isRepeat = true;
	return 1;
}

int n, q;
char name[MAXN];

int main(){
	scanf("%d",&n);
	for(int i = 1 ; i <= n ; ++i){
		scanf("%s",name+1);
		insert(name+1);
	}
	scanf("%d",&q);
	for(int i = 1, cmd ; i <= q ; ++i){
		scanf("%s",name+1);
		cmd = find(name+1);
		if(cmd==1){
			printf("OK\n");
		}else if(cmd==2){
			printf("WRONG\n");
		}else{
			printf("REPEAT\n");
		}
	}
	return 0;
}

/*
https://codeforces.com/contest/1455/problem/A
*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <string.h>
#include <algorithm>
#include <cmath>
#define max(a,b) ((a) > (b) ? (a) : (b))
#define min(a,b) ((a) < (b) ? (a) : (b))
#define pb push_back
#define cl clear
#define MAXN 100005

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

char s[105];

void solve(){
	scanf("%s",s+1);
	printf("%d\n",strlen(s+1));	
}

int main(){
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}

/*
https://codeforces.com/contest/1455/problem/B
*/

/*
 * 将x看成数列1~n的和或者数列1~n的和减去2~n+1
 */

#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <string.h>
#include <algorithm>
#include <cmath>
#define max(a,b) ((a) > (b) ? (a) : (b))
#define min(a,b) ((a) < (b) ? (a) : (b))
#define pb push_back
#define cl clear
#define MAXN 100005

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;
const int INF = 1e9;

inline int read(){
	int x = 0, f = 1;
	char ch = getchar();
	while(ch<'0'||ch>'9'){
		if(ch=='-')
			f = -1;
		ch = getchar();
	}
	while(ch>='0'&&ch<='9'){
		x=(x<<1)+(x<<3)+(ch^48);
		ch = getchar();
	}
	return x*f;
}

int x, n, ans;
int me[1000005];

void solve(){
	x = read();
	n = 0;
	while((n+n*n>>1)<=x){
		if((n+n*n>>1)==x){
			printf("%d\n",min(n,me[x]));
			return ;
		}
		++n;
	}
	printf("%d\n",me[x]);
}

int main(){
	int idx = 0, cnt = 2;
	while(idx<=1e6){
		for(int i = 1 ; i <= cnt ; ++i){
			me[idx++] = cnt;
		}
		++cnt;
	}
    int t = 1;
    t = read();
    while(t--) solve();
    return 0;
}