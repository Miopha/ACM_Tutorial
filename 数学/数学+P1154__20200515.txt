/*
题目描述:
农夫约翰有N(1 <= N <= 5000)头奶牛,每头奶牛都有一个唯一的不同于其它奶牛的编号si, 所有的奶牛
都睡在一个有K个厩的谷仓中，厩的编号为0到K - 1。 每头奶牛都知道自己该睡在哪一个厩中， 因为约
翰教会了它们做除法，Si mod K的值就是第头奶年所睡的厩的编号。
给出一组奶牛的编号，确定最小的K使得没有二头或二头以上的奶牛睡在同一厩中。
输入格式
第一行一个正整数N,第2到N + 1行每行一个整数表示一头奶牛的编号。
输出格式
一个整数，表示要求的最小的K，对所有的测试数据这样的K是一定存在的。
*/

/*
 * 有a%c和b%c,当c=abs(a-b)时,a%c==b%c
 * 即要让c不等于每个奶牛的编号的差的绝对值。
 * 答案还要大于等于n和尽可能小。
 */
 
//package P1154;

import java.io.*;
import java.util.*;

public class Main {

	static FastScanner cin = new FastScanner(System.in);
	static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	public static void main(String[] args) {
		//最少需要n个牛厩
		int n = cin.nextInt() , ans = n , index = 0;
		boolean[] vis = new boolean[1000001];
		int[] Si = new int[n];
		
		while(n-->0) {
			int num = cin.nextInt();
			for(int i = 0 ; i < index ; i++)
				vis[Math.abs(Si[i]-num)] = true;
			Si[index++] = num;
		}
		
		while(vis[ans++]);
		
		out.println(--ans);//-1回滚
		out.flush();
	}
	
	static class FastScanner{
		BufferedReader br ;
		StringTokenizer st;
		
		public FastScanner(InputStream in) {
			br = new BufferedReader(new InputStreamReader(in) , 16384);
			st = new StringTokenizer("");
		}
		
		public String nextLine() {
			try {
				return br.readLine();
			}catch(IOException e) {
				return null;
			}
		}
		
		public boolean hasNext() {
			while(!st.hasMoreTokens()) {
				String s = nextLine();
				if(s==null) return false;
				st = new StringTokenizer(s);
			}
			return true;
		}
		
		public String next() {
			hasNext();
			return st.nextToken();
		}
		
		public int nextInt() {
			hasNext();
			return Integer.parseInt(next());
		}
	}

}