/*
题目描述:
给出一个有理数c=a/b,求c % 19260817的值
输入格式:
一共两行。
第一行，一个整数 a。
第二行，一个整数 b。
输出格式:
一个整数，代表求余后的结果。如果无解，输出 Angry!。
输入 #1:
233
666
输出 #1:
18595654
说明/提示:
对于所有数据，保证0 <= a <= 10^10001, 1 <= b <= 10^10001, 且a, b不同时是19260817的倍数。
*/

/*
 * 根据逆元定义，答案是ans=a*inv(b)%mod
 * 要注意的是a和b的读取，数据范围高达10^10001,必须用字符串读取。
 * 再用字符串从低到高位读取位数，每次读取倍数*10，同时记得取余。
 */
 
//package P2613;

import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String a = sc.next() , b = sc.next();
		int up = 0, down = 0 , mod = 19260817;
		for(int i = a.length() - 1 , n = 0 , A = 1 ; i >= n ; i--) {
			up += (a.charAt(i) - '0') * A % mod;
			up %= mod;
			A *= 10;
			A %= mod;
		}
		for(int i = b.length() - 1 , n = 0 , B = 1 ; i >= n ; i--) {
			down += (b.charAt(i) - '0') * B % mod;
			down %= mod;
			B *= 10;
			B %= mod;
		}
		if(down==0) {
			System.out.println("Angry!");
			return ;
		}
		long ans = (long)up % mod * inv(down,mod) % mod;
		System.out.println(ans);
	}
	
	public static int inv(int a , int p) {
		return qpow(a,p-2,p);
	}
	
	public static int qpow(long a , long n , long mod) {
		long ans = 1;
		while(n!=0) {
			if((n&1)==1)ans = ans % mod * a % mod;
			a = a % mod * a % mod;
			n>>=1;
		}
		return (int)ans;
	}

}