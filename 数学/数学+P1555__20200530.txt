/*
题目背景
Bessie 刚刚学会了不同进制数之间的转换，但是她总是犯错误，因为她的两个前蹄不能轻松的握住钢笔。

题目描述
每当 Bessie 将一个数转换成新的进制时，她总会写错一位数字。例如，她将 14 转化成 2 进制数，正确的结果是 1110，但她可能会写成 0110 或 1111。Bessie 从不会意外的增加或删减数字，所以她可能会写出以 0 开头的错误数字。

给出 Bessie 转换后 N 的 2 进制形式和 3 进制形式，请计算出 N 的正确数值（用十进制表示）。N 可能会达到 10^9 ，输入数据保证解的存在唯一性。

输入格式
第一行，N 的 2 进制表示（有一位是错误的数字）。

第二行，N 的 3 进制表示（有一位是错误的数字）。

输出格式
N 的正确值。
*/

/*
 * 修改N的二进制位数为1或0,修改N的三进制位数为0,1或2
 * 用java自带的进制转换成十进制进行比较
 * 相等就是答案
 */
 
//package P1555;

import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String str1 = sc.next() , str2 = sc.next();
		for(int i = 0 ; i < str1.length() ; i++) {
			int modifyA = Integer.parseInt(str1.substring(0, i) + (str1.charAt(i)=='0'?"1":"0") + str1.substring(i+1,str1.length()),2);
			for(int j = 0 ; j < str2.length() ; j++) {
				for(int k = 0 ; k <= 2 ; k++) {
					if(k+'0'==str2.charAt(j))continue;
					int modifyB = Integer.parseInt(str2.substring(0, j) + (k+"") + str2.substring(j+1,str2.length()),3);
					if(modifyB==modifyA)
						System.out.println(modifyA);
				}
			}
		}
	}

}
