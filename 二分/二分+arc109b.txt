/*
https://atcoder.jp/contests/arc109/tasks/arc109_b
Problem Statement
Snuke is visiting a shop in Tokyo called 109 to buy some logs. He wants n logs: one of length 1, one of length 2, ..., and one of length n. The shop has n+1 logs in stock: one of length 1, one of length 2, …, and one of length n+1. Each of these logs is sold for 1 yen (the currency of Japan).

He can cut these logs as many times as he wants after buying them. That is, he can get k logs of length L1,…,Lk from a log of length L, where L=L1+⋯+Lk. He can also throw away unwanted logs.

Snuke wants to spend as little money as possible to get the logs he wants. Find the minimum amount of money needed to get n logs of length 1 to n
Constraints
1<=n<=1e18
*/

/*
 * 买长度x+1~n+1的log,其中长度为n+1的log分解成长度为1~x的log, 有 (1+x)/2*x<=n+1
 * 简化成x+x*x<=2*n+2，二分求解最大的x
 */
 
#include <iostream>
#include <cstdio>
#include <cmath>

using namespace std;
typedef long long ll;

ll n, x;

int main(){
	scanf("%lld",&n);
	// printf("%llf\n",sqrt(2e18));
	ll l = 1, r = sqrt(2e18);
	while(l<=r){
		ll mid = l+r>>1;
		if(mid+mid*mid>2*n+2){
			r = mid - 1;
		}else l = mid + 1;
	}
	printf("%lld\n",n+1-r);
	return 0;
}