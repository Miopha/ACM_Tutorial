/*
https://www.luogu.com.cn/problem/P3853
题目背景
B市和T市之间有一条长长的高速公路，这条公路的某些地方设有路标，但是大家都感觉路标设得太少了，相邻两个路标之间往往隔着相当长的一段距离。为了便于研究这个问题，我们把公路上相邻路标的最大距离定义为该公路的“空旷指数”。

题目描述
现在政府决定在公路上增设一些路标，使得公路的“空旷指数”最小。他们请求你设计一个程序计算能达到的最小值是多少。请注意，公路的起点和终点保证已设有路标，公路的长度为整数，并且原有路标和新设路标都必须距起点整数个单位距离。

输入格式
第1行包括三个数L、N、K，分别表示公路的长度，原有路标的数量，以及最多可增设的路标数量。

第2行包括递增排列的N个整数，分别表示原有的N个路标的位置。路标的位置用距起点的距离表示，且一定位于区间[0,L]内。

输出格式
输出1行，包含一个整数，表示增设路标后能达到的最小“空旷指数”值。

说明/提示
公路原来只在起点和终点处有两个路标，现在允许新增一个路标，应该把新路标设在距起点50或51个单位距离处，这样能达到最小的空旷指数51。

50%的数据中，2 ≤ N ≤100，0 ≤K ≤100

100%的数据中，2 ≤N ≤100000, 0 ≤K ≤100000

100%的数据中，0 ＜ L ≤10000000
*/

#include <iostream>
#include <cstdio>
#define re register
#define MAXN 100005

using namespace std;

int l, n, k, data[MAXN];

int main(){
    scanf("%d %d %d",&l,&n,&k);
    for(re int i = 1 ; i <= n ; ++i)
        scanf("%d",&data[i]);
    int left = 0, right = l;
    while(left<right){
        int mid = (left+right)>>1, cnt = 0;
        for(re int i = 2 ; i <= n ; ++i){
            cnt += (data[i]-data[i-1]) / mid;
            if((data[i]-data[i-1])%mid==0)
                --cnt;
        }
        if(cnt<=k){
            right = mid;
        }else{
            left = mid + 1;
        }
    }
    printf("%d\n",left);
    return 0;
}